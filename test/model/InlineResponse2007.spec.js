/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse2007', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.InlineResponse2007();
      });

      it('should create an instance of InlineResponse2007', function() {
        // TODO: update the code to test InlineResponse2007
        expect(instance).to.be.a(ClientPortalWebApi.InlineResponse2007);
      });

      it('should have the property _31 (base name: "31")', function() {
        // TODO: update the code to test the property _31
        expect(instance).to.have.property('_31');
        // expect(instance._31).to.be(expectedValueLiteral);
      });

      it('should have the property _55 (base name: "55")', function() {
        // TODO: update the code to test the property _55
        expect(instance).to.have.property('_55');
        // expect(instance._55).to.be(expectedValueLiteral);
      });

      it('should have the property _58 (base name: "58")', function() {
        // TODO: update the code to test the property _58
        expect(instance).to.have.property('_58');
        // expect(instance._58).to.be(expectedValueLiteral);
      });

      it('should have the property _70 (base name: "70")', function() {
        // TODO: update the code to test the property _70
        expect(instance).to.have.property('_70');
        // expect(instance._70).to.be(expectedValueLiteral);
      });

      it('should have the property _71 (base name: "71")', function() {
        // TODO: update the code to test the property _71
        expect(instance).to.have.property('_71');
        // expect(instance._71).to.be(expectedValueLiteral);
      });

      it('should have the property _72 (base name: "72")', function() {
        // TODO: update the code to test the property _72
        expect(instance).to.have.property('_72');
        // expect(instance._72).to.be(expectedValueLiteral);
      });

      it('should have the property _73 (base name: "73")', function() {
        // TODO: update the code to test the property _73
        expect(instance).to.have.property('_73');
        // expect(instance._73).to.be(expectedValueLiteral);
      });

      it('should have the property _74 (base name: "74")', function() {
        // TODO: update the code to test the property _74
        expect(instance).to.have.property('_74');
        // expect(instance._74).to.be(expectedValueLiteral);
      });

      it('should have the property _75 (base name: "75")', function() {
        // TODO: update the code to test the property _75
        expect(instance).to.have.property('_75');
        // expect(instance._75).to.be(expectedValueLiteral);
      });

      it('should have the property _76 (base name: "76")', function() {
        // TODO: update the code to test the property _76
        expect(instance).to.have.property('_76');
        // expect(instance._76).to.be(expectedValueLiteral);
      });

      it('should have the property _77 (base name: "77")', function() {
        // TODO: update the code to test the property _77
        expect(instance).to.have.property('_77');
        // expect(instance._77).to.be(expectedValueLiteral);
      });

      it('should have the property _78 (base name: "78")', function() {
        // TODO: update the code to test the property _78
        expect(instance).to.have.property('_78');
        // expect(instance._78).to.be(expectedValueLiteral);
      });

      it('should have the property _82 (base name: "82")', function() {
        // TODO: update the code to test the property _82
        expect(instance).to.have.property('_82');
        // expect(instance._82).to.be(expectedValueLiteral);
      });

      it('should have the property _83 (base name: "83")', function() {
        // TODO: update the code to test the property _83
        expect(instance).to.have.property('_83');
        // expect(instance._83).to.be(expectedValueLiteral);
      });

      it('should have the property _84 (base name: "84")', function() {
        // TODO: update the code to test the property _84
        expect(instance).to.have.property('_84');
        // expect(instance._84).to.be(expectedValueLiteral);
      });

      it('should have the property _85 (base name: "85")', function() {
        // TODO: update the code to test the property _85
        expect(instance).to.have.property('_85');
        // expect(instance._85).to.be(expectedValueLiteral);
      });

      it('should have the property _86 (base name: "86")', function() {
        // TODO: update the code to test the property _86
        expect(instance).to.have.property('_86');
        // expect(instance._86).to.be(expectedValueLiteral);
      });

      it('should have the property _87 (base name: "87")', function() {
        // TODO: update the code to test the property _87
        expect(instance).to.have.property('_87');
        // expect(instance._87).to.be(expectedValueLiteral);
      });

      it('should have the property _88 (base name: "88")', function() {
        // TODO: update the code to test the property _88
        expect(instance).to.have.property('_88');
        // expect(instance._88).to.be(expectedValueLiteral);
      });

      it('should have the property _6004 (base name: "6004")', function() {
        // TODO: update the code to test the property _6004
        expect(instance).to.have.property('_6004');
        // expect(instance._6004).to.be(expectedValueLiteral);
      });

      it('should have the property _6008 (base name: "6008")', function() {
        // TODO: update the code to test the property _6008
        expect(instance).to.have.property('_6008');
        // expect(instance._6008).to.be(expectedValueLiteral);
      });

      it('should have the property _6070 (base name: "6070")', function() {
        // TODO: update the code to test the property _6070
        expect(instance).to.have.property('_6070');
        // expect(instance._6070).to.be(expectedValueLiteral);
      });

      it('should have the property _6072 (base name: "6072")', function() {
        // TODO: update the code to test the property _6072
        expect(instance).to.have.property('_6072');
        // expect(instance._6072).to.be(expectedValueLiteral);
      });

      it('should have the property _6073 (base name: "6073")', function() {
        // TODO: update the code to test the property _6073
        expect(instance).to.have.property('_6073');
        // expect(instance._6073).to.be(expectedValueLiteral);
      });

      it('should have the property _6119 (base name: "6119")', function() {
        // TODO: update the code to test the property _6119
        expect(instance).to.have.property('_6119');
        // expect(instance._6119).to.be(expectedValueLiteral);
      });

      it('should have the property _6457 (base name: "6457")', function() {
        // TODO: update the code to test the property _6457
        expect(instance).to.have.property('_6457');
        // expect(instance._6457).to.be(expectedValueLiteral);
      });

      it('should have the property _6509 (base name: "6509")', function() {
        // TODO: update the code to test the property _6509
        expect(instance).to.have.property('_6509');
        // expect(instance._6509).to.be(expectedValueLiteral);
      });

      it('should have the property _7051 (base name: "7051")', function() {
        // TODO: update the code to test the property _7051
        expect(instance).to.have.property('_7051');
        // expect(instance._7051).to.be(expectedValueLiteral);
      });

      it('should have the property _7094 (base name: "7094")', function() {
        // TODO: update the code to test the property _7094
        expect(instance).to.have.property('_7094');
        // expect(instance._7094).to.be(expectedValueLiteral);
      });

      it('should have the property _7219 (base name: "7219")', function() {
        // TODO: update the code to test the property _7219
        expect(instance).to.have.property('_7219');
        // expect(instance._7219).to.be(expectedValueLiteral);
      });

      it('should have the property _7220 (base name: "7220")', function() {
        // TODO: update the code to test the property _7220
        expect(instance).to.have.property('_7220');
        // expect(instance._7220).to.be(expectedValueLiteral);
      });

      it('should have the property _7221 (base name: "7221")', function() {
        // TODO: update the code to test the property _7221
        expect(instance).to.have.property('_7221');
        // expect(instance._7221).to.be(expectedValueLiteral);
      });

      it('should have the property _7280 (base name: "7280")', function() {
        // TODO: update the code to test the property _7280
        expect(instance).to.have.property('_7280');
        // expect(instance._7280).to.be(expectedValueLiteral);
      });

      it('should have the property _7281 (base name: "7281")', function() {
        // TODO: update the code to test the property _7281
        expect(instance).to.have.property('_7281');
        // expect(instance._7281).to.be(expectedValueLiteral);
      });

      it('should have the property _7282 (base name: "7282")', function() {
        // TODO: update the code to test the property _7282
        expect(instance).to.have.property('_7282');
        // expect(instance._7282).to.be(expectedValueLiteral);
      });

      it('should have the property _7284 (base name: "7284")', function() {
        // TODO: update the code to test the property _7284
        expect(instance).to.have.property('_7284');
        // expect(instance._7284).to.be(expectedValueLiteral);
      });

      it('should have the property _7285 (base name: "7285")', function() {
        // TODO: update the code to test the property _7285
        expect(instance).to.have.property('_7285');
        // expect(instance._7285).to.be(expectedValueLiteral);
      });

      it('should have the property _7286 (base name: "7286")', function() {
        // TODO: update the code to test the property _7286
        expect(instance).to.have.property('_7286');
        // expect(instance._7286).to.be(expectedValueLiteral);
      });

      it('should have the property _7287 (base name: "7287")', function() {
        // TODO: update the code to test the property _7287
        expect(instance).to.have.property('_7287');
        // expect(instance._7287).to.be(expectedValueLiteral);
      });

      it('should have the property _7288 (base name: "7288")', function() {
        // TODO: update the code to test the property _7288
        expect(instance).to.have.property('_7288');
        // expect(instance._7288).to.be(expectedValueLiteral);
      });

      it('should have the property _7289 (base name: "7289")', function() {
        // TODO: update the code to test the property _7289
        expect(instance).to.have.property('_7289');
        // expect(instance._7289).to.be(expectedValueLiteral);
      });

      it('should have the property _7290 (base name: "7290")', function() {
        // TODO: update the code to test the property _7290
        expect(instance).to.have.property('_7290');
        // expect(instance._7290).to.be(expectedValueLiteral);
      });

      it('should have the property _7291 (base name: "7291")', function() {
        // TODO: update the code to test the property _7291
        expect(instance).to.have.property('_7291');
        // expect(instance._7291).to.be(expectedValueLiteral);
      });

      it('should have the property _7292 (base name: "7292")', function() {
        // TODO: update the code to test the property _7292
        expect(instance).to.have.property('_7292');
        // expect(instance._7292).to.be(expectedValueLiteral);
      });

      it('should have the property _7293 (base name: "7293")', function() {
        // TODO: update the code to test the property _7293
        expect(instance).to.have.property('_7293');
        // expect(instance._7293).to.be(expectedValueLiteral);
      });

      it('should have the property _7294 (base name: "7294")', function() {
        // TODO: update the code to test the property _7294
        expect(instance).to.have.property('_7294');
        // expect(instance._7294).to.be(expectedValueLiteral);
      });

      it('should have the property _7295 (base name: "7295")', function() {
        // TODO: update the code to test the property _7295
        expect(instance).to.have.property('_7295');
        // expect(instance._7295).to.be(expectedValueLiteral);
      });

      it('should have the property _7296 (base name: "7296")', function() {
        // TODO: update the code to test the property _7296
        expect(instance).to.have.property('_7296');
        // expect(instance._7296).to.be(expectedValueLiteral);
      });

      it('should have the property _7633 (base name: "7633")', function() {
        // TODO: update the code to test the property _7633
        expect(instance).to.have.property('_7633');
        // expect(instance._7633).to.be(expectedValueLiteral);
      });

      it('should have the property serverId (base name: "server_id")', function() {
        // TODO: update the code to test the property serverId
        expect(instance).to.have.property('serverId');
        // expect(instance.serverId).to.be(expectedValueLiteral);
      });

      it('should have the property conid (base name: "conid")', function() {
        // TODO: update the code to test the property conid
        expect(instance).to.have.property('conid');
        // expect(instance.conid).to.be(expectedValueLiteral);
      });

      it('should have the property updated (base name: "_updated")', function() {
        // TODO: update the code to test the property updated
        expect(instance).to.have.property('updated');
        // expect(instance.updated).to.be(expectedValueLiteral);
      });

    });
  });

}));
