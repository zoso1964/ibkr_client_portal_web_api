/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse20019', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.InlineResponse20019();
      });

      it('should create an instance of InlineResponse20019', function() {
        // TODO: update the code to test InlineResponse20019
        expect(instance).to.be.a(ClientPortalWebApi.InlineResponse20019);
      });

      it('should have the property A (base name: "A")', function() {
        // TODO: update the code to test the property A
        expect(instance).to.have.property('A');
        // expect(instance.A).to.be(expectedValueLiteral);
      });

      it('should have the property FC (base name: "FC")', function() {
        // TODO: update the code to test the property FC
        expect(instance).to.have.property('FC');
        // expect(instance.FC).to.be(expectedValueLiteral);
      });

      it('should have the property H (base name: "H")', function() {
        // TODO: update the code to test the property H
        expect(instance).to.have.property('H');
        // expect(instance.H).to.be(expectedValueLiteral);
      });

      it('should have the property FD (base name: "FD")', function() {
        // TODO: update the code to test the property FD
        expect(instance).to.have.property('FD');
        // expect(instance.FD).to.be(expectedValueLiteral);
      });

      it('should have the property FN (base name: "FN")', function() {
        // TODO: update the code to test the property FN
        expect(instance).to.have.property('FN');
        // expect(instance.FN).to.be(expectedValueLiteral);
      });

    });
  });

}));
