/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('NotificationsInner', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.NotificationsInner();
      });

      it('should create an instance of NotificationsInner', function() {
        // TODO: update the code to test NotificationsInner
        expect(instance).to.be.a(ClientPortalWebApi.NotificationsInner);
      });

      it('should have the property D (base name: "D")', function() {
        // TODO: update the code to test the property D
        expect(instance).to.have.property('D');
        // expect(instance.D).to.be(expectedValueLiteral);
      });

      it('should have the property ID (base name: "ID")', function() {
        // TODO: update the code to test the property ID
        expect(instance).to.have.property('ID');
        // expect(instance.ID).to.be(expectedValueLiteral);
      });

      it('should have the property FC (base name: "FC")', function() {
        // TODO: update the code to test the property FC
        expect(instance).to.have.property('FC');
        // expect(instance.FC).to.be(expectedValueLiteral);
      });

      it('should have the property MD (base name: "MD")', function() {
        // TODO: update the code to test the property MD
        expect(instance).to.have.property('MD');
        // expect(instance.MD).to.be(expectedValueLiteral);
      });

      it('should have the property MS (base name: "MS")', function() {
        // TODO: update the code to test the property MS
        expect(instance).to.have.property('MS');
        // expect(instance.MS).to.be(expectedValueLiteral);
      });

      it('should have the property R (base name: "R")', function() {
        // TODO: update the code to test the property R
        expect(instance).to.have.property('R');
        // expect(instance.R).to.be(expectedValueLiteral);
      });

    });
  });

}));
