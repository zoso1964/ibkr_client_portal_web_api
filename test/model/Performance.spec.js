/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Performance', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.Performance();
      });

      it('should create an instance of Performance', function() {
        // TODO: update the code to test Performance
        expect(instance).to.be.a(ClientPortalWebApi.Performance);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property cps (base name: "cps")', function() {
        // TODO: update the code to test the property cps
        expect(instance).to.have.property('cps');
        // expect(instance.cps).to.be(expectedValueLiteral);
      });

      it('should have the property tpps (base name: "tpps")', function() {
        // TODO: update the code to test the property tpps
        expect(instance).to.have.property('tpps');
        // expect(instance.tpps).to.be(expectedValueLiteral);
      });

      it('should have the property nav (base name: "nav")', function() {
        // TODO: update the code to test the property nav
        expect(instance).to.have.property('nav');
        // expect(instance.nav).to.be(expectedValueLiteral);
      });

      it('should have the property pm (base name: "pm")', function() {
        // TODO: update the code to test the property pm
        expect(instance).to.have.property('pm');
        // expect(instance.pm).to.be(expectedValueLiteral);
      });

      it('should have the property included (base name: "included")', function() {
        // TODO: update the code to test the property included
        expect(instance).to.have.property('included');
        // expect(instance.included).to.be(expectedValueLiteral);
      });

      it('should have the property currencyType (base name: "currencyType")', function() {
        // TODO: update the code to test the property currencyType
        expect(instance).to.have.property('currencyType');
        // expect(instance.currencyType).to.be(expectedValueLiteral);
      });

      it('should have the property rc (base name: "rc")', function() {
        // TODO: update the code to test the property rc
        expect(instance).to.have.property('rc');
        // expect(instance.rc).to.be(expectedValueLiteral);
      });

    });
  });

}));
