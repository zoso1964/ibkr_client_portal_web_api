/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse2008', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.InlineResponse2008();
      });

      it('should create an instance of InlineResponse2008', function() {
        // TODO: update the code to test InlineResponse2008
        expect(instance).to.be.a(ClientPortalWebApi.InlineResponse2008);
      });

      it('should have the property conid (base name: "conid")', function() {
        // TODO: update the code to test the property conid
        expect(instance).to.have.property('conid');
        // expect(instance.conid).to.be(expectedValueLiteral);
      });

      it('should have the property companyHeader (base name: "companyHeader")', function() {
        // TODO: update the code to test the property companyHeader
        expect(instance).to.have.property('companyHeader');
        // expect(instance.companyHeader).to.be(expectedValueLiteral);
      });

      it('should have the property companyName (base name: "companyName")', function() {
        // TODO: update the code to test the property companyName
        expect(instance).to.have.property('companyName');
        // expect(instance.companyName).to.be(expectedValueLiteral);
      });

      it('should have the property symbol (base name: "symbol")', function() {
        // TODO: update the code to test the property symbol
        expect(instance).to.have.property('symbol');
        // expect(instance.symbol).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property opt (base name: "opt")', function() {
        // TODO: update the code to test the property opt
        expect(instance).to.have.property('opt');
        // expect(instance.opt).to.be(expectedValueLiteral);
      });

      it('should have the property war (base name: "war")', function() {
        // TODO: update the code to test the property war
        expect(instance).to.have.property('war');
        // expect(instance.war).to.be(expectedValueLiteral);
      });

      it('should have the property sections (base name: "sections")', function() {
        // TODO: update the code to test the property sections
        expect(instance).to.have.property('sections');
        // expect(instance.sections).to.be(expectedValueLiteral);
      });

    });
  });

}));
