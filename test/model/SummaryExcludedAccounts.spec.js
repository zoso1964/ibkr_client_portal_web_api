/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SummaryExcludedAccounts', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.SummaryExcludedAccounts();
      });

      it('should create an instance of SummaryExcludedAccounts', function() {
        // TODO: update the code to test SummaryExcludedAccounts
        expect(instance).to.be.a(ClientPortalWebApi.SummaryExcludedAccounts);
      });

      it('should have the property lastUpdateAttempt (base name: "lastUpdateAttempt")', function() {
        // TODO: update the code to test the property lastUpdateAttempt
        expect(instance).to.have.property('lastUpdateAttempt');
        // expect(instance.lastUpdateAttempt).to.be(expectedValueLiteral);
      });

      it('should have the property fiName (base name: "fiName")', function() {
        // TODO: update the code to test the property fiName
        expect(instance).to.have.property('fiName');
        // expect(instance.fiName).to.be(expectedValueLiteral);
      });

      it('should have the property acctTitle (base name: "acctTitle")', function() {
        // TODO: update the code to test the property acctTitle
        expect(instance).to.have.property('acctTitle');
        // expect(instance.acctTitle).to.be(expectedValueLiteral);
      });

      it('should have the property acctNumAtFI (base name: "acctNumAtFI")', function() {
        // TODO: update the code to test the property acctNumAtFI
        expect(instance).to.have.property('acctNumAtFI');
        // expect(instance.acctNumAtFI).to.be(expectedValueLiteral);
      });

      it('should have the property acctId (base name: "acctId")', function() {
        // TODO: update the code to test the property acctId
        expect(instance).to.have.property('acctId');
        // expect(instance.acctId).to.be(expectedValueLiteral);
      });

      it('should have the property lastUpdate (base name: "lastUpdate")', function() {
        // TODO: update the code to test the property lastUpdate
        expect(instance).to.have.property('lastUpdate');
        // expect(instance.lastUpdate).to.be(expectedValueLiteral);
      });

      it('should have the property harvestCode (base name: "harvestCode")', function() {
        // TODO: update the code to test the property harvestCode
        expect(instance).to.have.property('harvestCode');
        // expect(instance.harvestCode).to.be(expectedValueLiteral);
      });

      it('should have the property lastUpdateStatusCode (base name: "lastUpdateStatusCode")', function() {
        // TODO: update the code to test the property lastUpdateStatusCode
        expect(instance).to.have.property('lastUpdateStatusCode');
        // expect(instance.lastUpdateStatusCode).to.be(expectedValueLiteral);
      });

      it('should have the property rc (base name: "rc")', function() {
        // TODO: update the code to test the property rc
        expect(instance).to.have.property('rc');
        // expect(instance.rc).to.be(expectedValueLiteral);
      });

    });
  });

}));
