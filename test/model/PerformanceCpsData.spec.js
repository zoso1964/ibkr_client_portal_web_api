/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PerformanceCpsData', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.PerformanceCpsData();
      });

      it('should create an instance of PerformanceCpsData', function() {
        // TODO: update the code to test PerformanceCpsData
        expect(instance).to.be.a(ClientPortalWebApi.PerformanceCpsData);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property idType (base name: "idType")', function() {
        // TODO: update the code to test the property idType
        expect(instance).to.have.property('idType');
        // expect(instance.idType).to.be(expectedValueLiteral);
      });

      it('should have the property start (base name: "start")', function() {
        // TODO: update the code to test the property start
        expect(instance).to.have.property('start');
        // expect(instance.start).to.be(expectedValueLiteral);
      });

      it('should have the property baseCurrency (base name: "baseCurrency")', function() {
        // TODO: update the code to test the property baseCurrency
        expect(instance).to.have.property('baseCurrency');
        // expect(instance.baseCurrency).to.be(expectedValueLiteral);
      });

      it('should have the property returns (base name: "returns")', function() {
        // TODO: update the code to test the property returns
        expect(instance).to.have.property('returns');
        // expect(instance.returns).to.be(expectedValueLiteral);
      });

      it('should have the property end (base name: "end")', function() {
        // TODO: update the code to test the property end
        expect(instance).to.have.property('end');
        // expect(instance.end).to.be(expectedValueLiteral);
      });

    });
  });

}));
