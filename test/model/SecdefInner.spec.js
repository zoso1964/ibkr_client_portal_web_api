/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SecdefInner', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.SecdefInner();
      });

      it('should create an instance of SecdefInner', function() {
        // TODO: update the code to test SecdefInner
        expect(instance).to.be.a(ClientPortalWebApi.SecdefInner);
      });

      it('should have the property conid (base name: "conid")', function() {
        // TODO: update the code to test the property conid
        expect(instance).to.have.property('conid');
        // expect(instance.conid).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property assetClass (base name: "assetClass")', function() {
        // TODO: update the code to test the property assetClass
        expect(instance).to.have.property('assetClass');
        // expect(instance.assetClass).to.be(expectedValueLiteral);
      });

      it('should have the property expiry (base name: "expiry")', function() {
        // TODO: update the code to test the property expiry
        expect(instance).to.have.property('expiry');
        // expect(instance.expiry).to.be(expectedValueLiteral);
      });

      it('should have the property lastTradingDay (base name: "lastTradingDay")', function() {
        // TODO: update the code to test the property lastTradingDay
        expect(instance).to.have.property('lastTradingDay');
        // expect(instance.lastTradingDay).to.be(expectedValueLiteral);
      });

      it('should have the property group (base name: "group")', function() {
        // TODO: update the code to test the property group
        expect(instance).to.have.property('group');
        // expect(instance.group).to.be(expectedValueLiteral);
      });

      it('should have the property putOrCall (base name: "putOrCall")', function() {
        // TODO: update the code to test the property putOrCall
        expect(instance).to.have.property('putOrCall');
        // expect(instance.putOrCall).to.be(expectedValueLiteral);
      });

      it('should have the property sector (base name: "sector")', function() {
        // TODO: update the code to test the property sector
        expect(instance).to.have.property('sector');
        // expect(instance.sector).to.be(expectedValueLiteral);
      });

      it('should have the property sectorGroup (base name: "sectorGroup")', function() {
        // TODO: update the code to test the property sectorGroup
        expect(instance).to.have.property('sectorGroup');
        // expect(instance.sectorGroup).to.be(expectedValueLiteral);
      });

      it('should have the property strike (base name: "strike")', function() {
        // TODO: update the code to test the property strike
        expect(instance).to.have.property('strike');
        // expect(instance.strike).to.be(expectedValueLiteral);
      });

      it('should have the property ticker (base name: "ticker")', function() {
        // TODO: update the code to test the property ticker
        expect(instance).to.have.property('ticker');
        // expect(instance.ticker).to.be(expectedValueLiteral);
      });

      it('should have the property undConid (base name: "undConid")', function() {
        // TODO: update the code to test the property undConid
        expect(instance).to.have.property('undConid');
        // expect(instance.undConid).to.be(expectedValueLiteral);
      });

      it('should have the property fullName (base name: "fullName")', function() {
        // TODO: update the code to test the property fullName
        expect(instance).to.have.property('fullName');
        // expect(instance.fullName).to.be(expectedValueLiteral);
      });

      it('should have the property pageSize (base name: "pageSize")', function() {
        // TODO: update the code to test the property pageSize
        expect(instance).to.have.property('pageSize');
        // expect(instance.pageSize).to.be(expectedValueLiteral);
      });

    });
  });

}));
