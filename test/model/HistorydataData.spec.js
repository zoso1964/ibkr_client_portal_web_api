/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('HistorydataData', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.HistorydataData();
      });

      it('should create an instance of HistorydataData', function() {
        // TODO: update the code to test HistorydataData
        expect(instance).to.be.a(ClientPortalWebApi.HistorydataData);
      });

      it('should have the property o (base name: "o")', function() {
        // TODO: update the code to test the property o
        expect(instance).to.have.property('o');
        // expect(instance.o).to.be(expectedValueLiteral);
      });

      it('should have the property c (base name: "c")', function() {
        // TODO: update the code to test the property c
        expect(instance).to.have.property('c');
        // expect(instance.c).to.be(expectedValueLiteral);
      });

      it('should have the property h (base name: "h")', function() {
        // TODO: update the code to test the property h
        expect(instance).to.have.property('h');
        // expect(instance.h).to.be(expectedValueLiteral);
      });

      it('should have the property l (base name: "l")', function() {
        // TODO: update the code to test the property l
        expect(instance).to.have.property('l');
        // expect(instance.l).to.be(expectedValueLiteral);
      });

      it('should have the property v (base name: "v")', function() {
        // TODO: update the code to test the property v
        expect(instance).to.have.property('v');
        // expect(instance.v).to.be(expectedValueLiteral);
      });

      it('should have the property t (base name: "t")', function() {
        // TODO: update the code to test the property t
        expect(instance).to.have.property('t');
        // expect(instance.t).to.be(expectedValueLiteral);
      });

    });
  });

}));
