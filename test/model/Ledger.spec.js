/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClientPortalWebApi);
  }
}(this, function(expect, ClientPortalWebApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Ledger', function() {
      beforeEach(function() {
        instance = new ClientPortalWebApi.Ledger();
      });

      it('should create an instance of Ledger', function() {
        // TODO: update the code to test Ledger
        expect(instance).to.be.a(ClientPortalWebApi.Ledger);
      });

      it('should have the property commoditymarketvalue (base name: "commoditymarketvalue")', function() {
        // TODO: update the code to test the property commoditymarketvalue
        expect(instance).to.have.property('commoditymarketvalue');
        // expect(instance.commoditymarketvalue).to.be(expectedValueLiteral);
      });

      it('should have the property futuremarketvalue (base name: "futuremarketvalue")', function() {
        // TODO: update the code to test the property futuremarketvalue
        expect(instance).to.have.property('futuremarketvalue');
        // expect(instance.futuremarketvalue).to.be(expectedValueLiteral);
      });

      it('should have the property settledcash (base name: "settledcash")', function() {
        // TODO: update the code to test the property settledcash
        expect(instance).to.have.property('settledcash');
        // expect(instance.settledcash).to.be(expectedValueLiteral);
      });

      it('should have the property exchangerate (base name: "exchangerate")', function() {
        // TODO: update the code to test the property exchangerate
        expect(instance).to.have.property('exchangerate');
        // expect(instance.exchangerate).to.be(expectedValueLiteral);
      });

      it('should have the property sessionid (base name: "sessionid")', function() {
        // TODO: update the code to test the property sessionid
        expect(instance).to.have.property('sessionid');
        // expect(instance.sessionid).to.be(expectedValueLiteral);
      });

      it('should have the property cashbalance (base name: "cashbalance")', function() {
        // TODO: update the code to test the property cashbalance
        expect(instance).to.have.property('cashbalance');
        // expect(instance.cashbalance).to.be(expectedValueLiteral);
      });

      it('should have the property corporatebondsmarketvalue (base name: "corporatebondsmarketvalue")', function() {
        // TODO: update the code to test the property corporatebondsmarketvalue
        expect(instance).to.have.property('corporatebondsmarketvalue');
        // expect(instance.corporatebondsmarketvalue).to.be(expectedValueLiteral);
      });

      it('should have the property warrantsmarketvalue (base name: "warrantsmarketvalue")', function() {
        // TODO: update the code to test the property warrantsmarketvalue
        expect(instance).to.have.property('warrantsmarketvalue');
        // expect(instance.warrantsmarketvalue).to.be(expectedValueLiteral);
      });

      it('should have the property netliquidationvalue (base name: "netliquidationvalue")', function() {
        // TODO: update the code to test the property netliquidationvalue
        expect(instance).to.have.property('netliquidationvalue');
        // expect(instance.netliquidationvalue).to.be(expectedValueLiteral);
      });

      it('should have the property interest (base name: "interest")', function() {
        // TODO: update the code to test the property interest
        expect(instance).to.have.property('interest');
        // expect(instance.interest).to.be(expectedValueLiteral);
      });

      it('should have the property unrealizedpnl (base name: "unrealizedpnl")', function() {
        // TODO: update the code to test the property unrealizedpnl
        expect(instance).to.have.property('unrealizedpnl');
        // expect(instance.unrealizedpnl).to.be(expectedValueLiteral);
      });

      it('should have the property stockmarketvalue (base name: "stockmarketvalue")', function() {
        // TODO: update the code to test the property stockmarketvalue
        expect(instance).to.have.property('stockmarketvalue');
        // expect(instance.stockmarketvalue).to.be(expectedValueLiteral);
      });

      it('should have the property moneyfunds (base name: "moneyfunds")', function() {
        // TODO: update the code to test the property moneyfunds
        expect(instance).to.have.property('moneyfunds');
        // expect(instance.moneyfunds).to.be(expectedValueLiteral);
      });

      it('should have the property currency (base name: "currency")', function() {
        // TODO: update the code to test the property currency
        expect(instance).to.have.property('currency');
        // expect(instance.currency).to.be(expectedValueLiteral);
      });

      it('should have the property realizedpnl (base name: "realizedpnl")', function() {
        // TODO: update the code to test the property realizedpnl
        expect(instance).to.have.property('realizedpnl');
        // expect(instance.realizedpnl).to.be(expectedValueLiteral);
      });

      it('should have the property funds (base name: "funds")', function() {
        // TODO: update the code to test the property funds
        expect(instance).to.have.property('funds');
        // expect(instance.funds).to.be(expectedValueLiteral);
      });

      it('should have the property acctcode (base name: "acctcode")', function() {
        // TODO: update the code to test the property acctcode
        expect(instance).to.have.property('acctcode');
        // expect(instance.acctcode).to.be(expectedValueLiteral);
      });

      it('should have the property issueroptionsmarketvalue (base name: "issueroptionsmarketvalue")', function() {
        // TODO: update the code to test the property issueroptionsmarketvalue
        expect(instance).to.have.property('issueroptionsmarketvalue');
        // expect(instance.issueroptionsmarketvalue).to.be(expectedValueLiteral);
      });

      it('should have the property key (base name: "key")', function() {
        // TODO: update the code to test the property key
        expect(instance).to.have.property('key');
        // expect(instance.key).to.be(expectedValueLiteral);
      });

      it('should have the property timestamp (base name: "timestamp")', function() {
        // TODO: update the code to test the property timestamp
        expect(instance).to.have.property('timestamp');
        // expect(instance.timestamp).to.be(expectedValueLiteral);
      });

      it('should have the property severity (base name: "severity")', function() {
        // TODO: update the code to test the property severity
        expect(instance).to.have.property('severity');
        // expect(instance.severity).to.be(expectedValueLiteral);
      });

    });
  });

}));
