/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ClientPortalWebApi) {
      root.ClientPortalWebApi = {};
    }
    root.ClientPortalWebApi.NotificationsInner = factory(root.ClientPortalWebApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The NotificationsInner model module.
   * @module model/NotificationsInner
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>NotificationsInner</code>.
   * notification
   * @alias module:model/NotificationsInner
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>NotificationsInner</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NotificationsInner} obj Optional instance to populate.
   * @return {module:model/NotificationsInner} The populated <code>NotificationsInner</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('D'))
        obj.D = ApiClient.convertToType(data['D'], 'String');
      if (data.hasOwnProperty('ID'))
        obj.ID = ApiClient.convertToType(data['ID'], 'String');
      if (data.hasOwnProperty('FC'))
        obj.FC = ApiClient.convertToType(data['FC'], 'String');
      if (data.hasOwnProperty('MD'))
        obj.MD = ApiClient.convertToType(data['MD'], 'String');
      if (data.hasOwnProperty('MS'))
        obj.MS = ApiClient.convertToType(data['MS'], 'String');
      if (data.hasOwnProperty('R'))
        obj.R = ApiClient.convertToType(data['R'], 'String');
    }
    return obj;
  }

  /**
   * notification date
   * @member {String} D
   */
  exports.prototype.D = undefined;

  /**
   * unique way to reference this notification
   * @member {String} ID
   */
  exports.prototype.ID = undefined;

  /**
   * FYI code, we can use it to find whether the disclaimer is accepted or not in settings
   * @member {String} FC
   */
  exports.prototype.FC = undefined;

  /**
   * content of notification
   * @member {String} MD
   */
  exports.prototype.MD = undefined;

  /**
   * title of notification
   * @member {String} MS
   */
  exports.prototype.MS = undefined;

  /**
   * 0-unread, 1-read
   * @member {String} R
   */
  exports.prototype.R = undefined;

  return exports;

}));
