/*
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ClientPortalWebApi) {
      root.ClientPortalWebApi = {};
    }
    root.ClientPortalWebApi.ContractRules = factory(root.ClientPortalWebApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ContractRules model module.
   * @module model/ContractRules
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ContractRules</code>.
   * @alias module:model/ContractRules
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ContractRules</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ContractRules} obj Optional instance to populate.
   * @return {module:model/ContractRules} The populated <code>ContractRules</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('orderTypes'))
        obj.orderTypes = ApiClient.convertToType(data['orderTypes'], ['String']);
      if (data.hasOwnProperty('orderTypesOutside'))
        obj.orderTypesOutside = ApiClient.convertToType(data['orderTypesOutside'], ['String']);
      if (data.hasOwnProperty('defaultSize'))
        obj.defaultSize = ApiClient.convertToType(data['defaultSize'], 'Number');
      if (data.hasOwnProperty('sizeIncrement'))
        obj.sizeIncrement = ApiClient.convertToType(data['sizeIncrement'], 'Number');
      if (data.hasOwnProperty('tifTypes'))
        obj.tifTypes = ApiClient.convertToType(data['tifTypes'], ['String']);
      if (data.hasOwnProperty('limitPrice'))
        obj.limitPrice = ApiClient.convertToType(data['limitPrice'], 'Number');
      if (data.hasOwnProperty('stopprice'))
        obj.stopprice = ApiClient.convertToType(data['stopprice'], 'Number');
      if (data.hasOwnProperty('preview'))
        obj.preview = ApiClient.convertToType(data['preview'], 'Boolean');
      if (data.hasOwnProperty('displaySize'))
        obj.displaySize = ApiClient.convertToType(data['displaySize'], 'String');
      if (data.hasOwnProperty('increment'))
        obj.increment = ApiClient.convertToType(data['increment'], 'String');
    }
    return obj;
  }

  /**
   * @member {Array.<String>} orderTypes
   */
  exports.prototype.orderTypes = undefined;

  /**
   * @member {Array.<String>} orderTypesOutside
   */
  exports.prototype.orderTypesOutside = undefined;

  /**
   * default quantity you can use to place an order
   * @member {Number} defaultSize
   */
  exports.prototype.defaultSize = undefined;

  /**
   * @member {Number} sizeIncrement
   */
  exports.prototype.sizeIncrement = undefined;

  /**
   * @member {Array.<String>} tifTypes
   */
  exports.prototype.tifTypes = undefined;

  /**
   * default limit price you can use to prefill your order
   * @member {Number} limitPrice
   */
  exports.prototype.limitPrice = undefined;

  /**
   * default stop price you can use to prefill your order
   * @member {Number} stopprice
   */
  exports.prototype.stopprice = undefined;

  /**
   * if you can preview the order or not with the whatif end-point
   * @member {Boolean} preview
   */
  exports.prototype.preview = undefined;

  /**
   * @member {String} displaySize
   */
  exports.prototype.displaySize = undefined;

  /**
   * @member {String} increment
   */
  exports.prototype.increment = undefined;

  return exports;

}));
